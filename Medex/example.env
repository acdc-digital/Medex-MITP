#In your script, you're using environment variables to store sensitive information such as API keys. This is a good practice because it keeps these values out of your script, making it safer to share your code without sharing your keys.
#However, your script doesn't include commands for a .env file. A .env file is a simple text file that contains key-value pairs, which are read as environment variables. To use a .env file, you would typically use a package like python-dotenv to load the variables into your environment.
#Here's how you can use it. Install the python-dotenv package:
```python
pip install python-dotenv
```
#In your script, you can load the .env file like this:
```python
Copy code
from dotenv import load_dotenv
load_dotenv()  # take environment variables from .env.
```
#This will take the environment variables from a file named .env in the same directory as the script. If your .env file is located elsewhere, you can specify the path like this:
```python
Copy code
load_dotenv('/path/to/.env')
```
#Then you can access the variables like this:
```python
Copy code
import os
api_key = os.getenv('API_KEY')
```
#This will assign the value of the API_KEY environment variable to the api_key variable in your script. Remember to add your .env file to your .gitignore file if you're using version control to prevent it from being committed to your repository. This is important because your .env file contains sensitive information that should not be shared.

OPENAI_API_KEY=sk-hXivMZ**********************************UTTQ
MYSCALE_API_KEY=6B71Nu************WqM27
